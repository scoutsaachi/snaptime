# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _snaptime_helper.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_snaptime_helper')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_snaptime_helper')
    _snaptime_helper = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_snaptime_helper', [dirname(__file__)])
        except ImportError:
            import _snaptime_helper
            return _snaptime_helper
        try:
            _mod = imp.load_module('_snaptime_helper', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _snaptime_helper = swig_import_helper()
    del swig_import_helper
else:
    import _snaptime_helper
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _snaptime_helper.delete_SwigPyIterator
    def __iter__(self):
        return self
SwigPyIterator.value = new_instancemethod(_snaptime_helper.SwigPyIterator_value, None, SwigPyIterator)
SwigPyIterator.incr = new_instancemethod(_snaptime_helper.SwigPyIterator_incr, None, SwigPyIterator)
SwigPyIterator.decr = new_instancemethod(_snaptime_helper.SwigPyIterator_decr, None, SwigPyIterator)
SwigPyIterator.distance = new_instancemethod(_snaptime_helper.SwigPyIterator_distance, None, SwigPyIterator)
SwigPyIterator.equal = new_instancemethod(_snaptime_helper.SwigPyIterator_equal, None, SwigPyIterator)
SwigPyIterator.copy = new_instancemethod(_snaptime_helper.SwigPyIterator_copy, None, SwigPyIterator)
SwigPyIterator.next = new_instancemethod(_snaptime_helper.SwigPyIterator_next, None, SwigPyIterator)
SwigPyIterator.__next__ = new_instancemethod(_snaptime_helper.SwigPyIterator___next__, None, SwigPyIterator)
SwigPyIterator.previous = new_instancemethod(_snaptime_helper.SwigPyIterator_previous, None, SwigPyIterator)
SwigPyIterator.advance = new_instancemethod(_snaptime_helper.SwigPyIterator_advance, None, SwigPyIterator)
SwigPyIterator.__eq__ = new_instancemethod(_snaptime_helper.SwigPyIterator___eq__, None, SwigPyIterator)
SwigPyIterator.__ne__ = new_instancemethod(_snaptime_helper.SwigPyIterator___ne__, None, SwigPyIterator)
SwigPyIterator.__iadd__ = new_instancemethod(_snaptime_helper.SwigPyIterator___iadd__, None, SwigPyIterator)
SwigPyIterator.__isub__ = new_instancemethod(_snaptime_helper.SwigPyIterator___isub__, None, SwigPyIterator)
SwigPyIterator.__add__ = new_instancemethod(_snaptime_helper.SwigPyIterator___add__, None, SwigPyIterator)
SwigPyIterator.__sub__ = new_instancemethod(_snaptime_helper.SwigPyIterator___sub__, None, SwigPyIterator)
SwigPyIterator_swigregister = _snaptime_helper.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class IntList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _snaptime_helper.IntList_swiginit(self, _snaptime_helper.new_IntList(*args))
    __swig_destroy__ = _snaptime_helper.delete_IntList
IntList.iterator = new_instancemethod(_snaptime_helper.IntList_iterator, None, IntList)
IntList.__nonzero__ = new_instancemethod(_snaptime_helper.IntList___nonzero__, None, IntList)
IntList.__bool__ = new_instancemethod(_snaptime_helper.IntList___bool__, None, IntList)
IntList.__len__ = new_instancemethod(_snaptime_helper.IntList___len__, None, IntList)
IntList.__getslice__ = new_instancemethod(_snaptime_helper.IntList___getslice__, None, IntList)
IntList.__setslice__ = new_instancemethod(_snaptime_helper.IntList___setslice__, None, IntList)
IntList.__delslice__ = new_instancemethod(_snaptime_helper.IntList___delslice__, None, IntList)
IntList.__delitem__ = new_instancemethod(_snaptime_helper.IntList___delitem__, None, IntList)
IntList.__getitem__ = new_instancemethod(_snaptime_helper.IntList___getitem__, None, IntList)
IntList.__setitem__ = new_instancemethod(_snaptime_helper.IntList___setitem__, None, IntList)
IntList.pop = new_instancemethod(_snaptime_helper.IntList_pop, None, IntList)
IntList.append = new_instancemethod(_snaptime_helper.IntList_append, None, IntList)
IntList.empty = new_instancemethod(_snaptime_helper.IntList_empty, None, IntList)
IntList.size = new_instancemethod(_snaptime_helper.IntList_size, None, IntList)
IntList.swap = new_instancemethod(_snaptime_helper.IntList_swap, None, IntList)
IntList.begin = new_instancemethod(_snaptime_helper.IntList_begin, None, IntList)
IntList.end = new_instancemethod(_snaptime_helper.IntList_end, None, IntList)
IntList.rbegin = new_instancemethod(_snaptime_helper.IntList_rbegin, None, IntList)
IntList.rend = new_instancemethod(_snaptime_helper.IntList_rend, None, IntList)
IntList.clear = new_instancemethod(_snaptime_helper.IntList_clear, None, IntList)
IntList.get_allocator = new_instancemethod(_snaptime_helper.IntList_get_allocator, None, IntList)
IntList.pop_back = new_instancemethod(_snaptime_helper.IntList_pop_back, None, IntList)
IntList.erase = new_instancemethod(_snaptime_helper.IntList_erase, None, IntList)
IntList.push_back = new_instancemethod(_snaptime_helper.IntList_push_back, None, IntList)
IntList.front = new_instancemethod(_snaptime_helper.IntList_front, None, IntList)
IntList.back = new_instancemethod(_snaptime_helper.IntList_back, None, IntList)
IntList.assign = new_instancemethod(_snaptime_helper.IntList_assign, None, IntList)
IntList.resize = new_instancemethod(_snaptime_helper.IntList_resize, None, IntList)
IntList.insert = new_instancemethod(_snaptime_helper.IntList_insert, None, IntList)
IntList.reserve = new_instancemethod(_snaptime_helper.IntList_reserve, None, IntList)
IntList.capacity = new_instancemethod(_snaptime_helper.IntList_capacity, None, IntList)
IntList_swigregister = _snaptime_helper.IntList_swigregister
IntList_swigregister(IntList)

class NumpyList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _snaptime_helper.NumpyList_swiginit(self, _snaptime_helper.new_NumpyList(*args))
    __swig_destroy__ = _snaptime_helper.delete_NumpyList
NumpyList.iterator = new_instancemethod(_snaptime_helper.NumpyList_iterator, None, NumpyList)
NumpyList.__nonzero__ = new_instancemethod(_snaptime_helper.NumpyList___nonzero__, None, NumpyList)
NumpyList.__bool__ = new_instancemethod(_snaptime_helper.NumpyList___bool__, None, NumpyList)
NumpyList.__len__ = new_instancemethod(_snaptime_helper.NumpyList___len__, None, NumpyList)
NumpyList.__getslice__ = new_instancemethod(_snaptime_helper.NumpyList___getslice__, None, NumpyList)
NumpyList.__setslice__ = new_instancemethod(_snaptime_helper.NumpyList___setslice__, None, NumpyList)
NumpyList.__delslice__ = new_instancemethod(_snaptime_helper.NumpyList___delslice__, None, NumpyList)
NumpyList.__delitem__ = new_instancemethod(_snaptime_helper.NumpyList___delitem__, None, NumpyList)
NumpyList.__getitem__ = new_instancemethod(_snaptime_helper.NumpyList___getitem__, None, NumpyList)
NumpyList.__setitem__ = new_instancemethod(_snaptime_helper.NumpyList___setitem__, None, NumpyList)
NumpyList.pop = new_instancemethod(_snaptime_helper.NumpyList_pop, None, NumpyList)
NumpyList.append = new_instancemethod(_snaptime_helper.NumpyList_append, None, NumpyList)
NumpyList.empty = new_instancemethod(_snaptime_helper.NumpyList_empty, None, NumpyList)
NumpyList.size = new_instancemethod(_snaptime_helper.NumpyList_size, None, NumpyList)
NumpyList.swap = new_instancemethod(_snaptime_helper.NumpyList_swap, None, NumpyList)
NumpyList.begin = new_instancemethod(_snaptime_helper.NumpyList_begin, None, NumpyList)
NumpyList.end = new_instancemethod(_snaptime_helper.NumpyList_end, None, NumpyList)
NumpyList.rbegin = new_instancemethod(_snaptime_helper.NumpyList_rbegin, None, NumpyList)
NumpyList.rend = new_instancemethod(_snaptime_helper.NumpyList_rend, None, NumpyList)
NumpyList.clear = new_instancemethod(_snaptime_helper.NumpyList_clear, None, NumpyList)
NumpyList.get_allocator = new_instancemethod(_snaptime_helper.NumpyList_get_allocator, None, NumpyList)
NumpyList.pop_back = new_instancemethod(_snaptime_helper.NumpyList_pop_back, None, NumpyList)
NumpyList.erase = new_instancemethod(_snaptime_helper.NumpyList_erase, None, NumpyList)
NumpyList.push_back = new_instancemethod(_snaptime_helper.NumpyList_push_back, None, NumpyList)
NumpyList.front = new_instancemethod(_snaptime_helper.NumpyList_front, None, NumpyList)
NumpyList.back = new_instancemethod(_snaptime_helper.NumpyList_back, None, NumpyList)
NumpyList.assign = new_instancemethod(_snaptime_helper.NumpyList_assign, None, NumpyList)
NumpyList.resize = new_instancemethod(_snaptime_helper.NumpyList_resize, None, NumpyList)
NumpyList.insert = new_instancemethod(_snaptime_helper.NumpyList_insert, None, NumpyList)
NumpyList.reserve = new_instancemethod(_snaptime_helper.NumpyList_reserve, None, NumpyList)
NumpyList.capacity = new_instancemethod(_snaptime_helper.NumpyList_capacity, None, NumpyList)
NumpyList_swigregister = _snaptime_helper.NumpyList_swigregister
NumpyList_swigregister(NumpyList)

class Numpy2DList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __iter__(self):
        return self.iterator()

    def __init__(self, *args):
        _snaptime_helper.Numpy2DList_swiginit(self, _snaptime_helper.new_Numpy2DList(*args))
    __swig_destroy__ = _snaptime_helper.delete_Numpy2DList
Numpy2DList.iterator = new_instancemethod(_snaptime_helper.Numpy2DList_iterator, None, Numpy2DList)
Numpy2DList.__nonzero__ = new_instancemethod(_snaptime_helper.Numpy2DList___nonzero__, None, Numpy2DList)
Numpy2DList.__bool__ = new_instancemethod(_snaptime_helper.Numpy2DList___bool__, None, Numpy2DList)
Numpy2DList.__len__ = new_instancemethod(_snaptime_helper.Numpy2DList___len__, None, Numpy2DList)
Numpy2DList.__getslice__ = new_instancemethod(_snaptime_helper.Numpy2DList___getslice__, None, Numpy2DList)
Numpy2DList.__setslice__ = new_instancemethod(_snaptime_helper.Numpy2DList___setslice__, None, Numpy2DList)
Numpy2DList.__delslice__ = new_instancemethod(_snaptime_helper.Numpy2DList___delslice__, None, Numpy2DList)
Numpy2DList.__delitem__ = new_instancemethod(_snaptime_helper.Numpy2DList___delitem__, None, Numpy2DList)
Numpy2DList.__getitem__ = new_instancemethod(_snaptime_helper.Numpy2DList___getitem__, None, Numpy2DList)
Numpy2DList.__setitem__ = new_instancemethod(_snaptime_helper.Numpy2DList___setitem__, None, Numpy2DList)
Numpy2DList.pop = new_instancemethod(_snaptime_helper.Numpy2DList_pop, None, Numpy2DList)
Numpy2DList.append = new_instancemethod(_snaptime_helper.Numpy2DList_append, None, Numpy2DList)
Numpy2DList.empty = new_instancemethod(_snaptime_helper.Numpy2DList_empty, None, Numpy2DList)
Numpy2DList.size = new_instancemethod(_snaptime_helper.Numpy2DList_size, None, Numpy2DList)
Numpy2DList.swap = new_instancemethod(_snaptime_helper.Numpy2DList_swap, None, Numpy2DList)
Numpy2DList.begin = new_instancemethod(_snaptime_helper.Numpy2DList_begin, None, Numpy2DList)
Numpy2DList.end = new_instancemethod(_snaptime_helper.Numpy2DList_end, None, Numpy2DList)
Numpy2DList.rbegin = new_instancemethod(_snaptime_helper.Numpy2DList_rbegin, None, Numpy2DList)
Numpy2DList.rend = new_instancemethod(_snaptime_helper.Numpy2DList_rend, None, Numpy2DList)
Numpy2DList.clear = new_instancemethod(_snaptime_helper.Numpy2DList_clear, None, Numpy2DList)
Numpy2DList.get_allocator = new_instancemethod(_snaptime_helper.Numpy2DList_get_allocator, None, Numpy2DList)
Numpy2DList.pop_back = new_instancemethod(_snaptime_helper.Numpy2DList_pop_back, None, Numpy2DList)
Numpy2DList.erase = new_instancemethod(_snaptime_helper.Numpy2DList_erase, None, Numpy2DList)
Numpy2DList.push_back = new_instancemethod(_snaptime_helper.Numpy2DList_push_back, None, Numpy2DList)
Numpy2DList.front = new_instancemethod(_snaptime_helper.Numpy2DList_front, None, Numpy2DList)
Numpy2DList.back = new_instancemethod(_snaptime_helper.Numpy2DList_back, None, Numpy2DList)
Numpy2DList.assign = new_instancemethod(_snaptime_helper.Numpy2DList_assign, None, Numpy2DList)
Numpy2DList.resize = new_instancemethod(_snaptime_helper.Numpy2DList_resize, None, Numpy2DList)
Numpy2DList.insert = new_instancemethod(_snaptime_helper.Numpy2DList_insert, None, Numpy2DList)
Numpy2DList.reserve = new_instancemethod(_snaptime_helper.Numpy2DList_reserve, None, Numpy2DList)
Numpy2DList.capacity = new_instancemethod(_snaptime_helper.Numpy2DList_capacity, None, Numpy2DList)
Numpy2DList_swigregister = _snaptime_helper.Numpy2DList_swigregister
Numpy2DList_swigregister(Numpy2DList)

PI = _snaptime_helper.PI
class Solver(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, sweep_length, K, beta, rho, data, arg7, n, w, init_mu, init_theta, e_abs, e_rel, ADMM_iter):
        _snaptime_helper.Solver_swiginit(self, _snaptime_helper.new_Solver(sweep_length, K, beta, rho, data, arg7, n, w, init_mu, init_theta, e_abs, e_rel, ADMM_iter))
    __swig_destroy__ = _snaptime_helper.delete_Solver
Solver.Solve = new_instancemethod(_snaptime_helper.Solver_Solve, None, Solver)
Solver.obtainTheta = new_instancemethod(_snaptime_helper.Solver_obtainTheta, None, Solver)
Solver.obtainAssignment = new_instancemethod(_snaptime_helper.Solver_obtainAssignment, None, Solver)
Solver_swigregister = _snaptime_helper.Solver_swigregister
Solver_swigregister(Solver)

class FillData(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self):
        _snaptime_helper.FillData_swiginit(self, _snaptime_helper.new_FillData())
    __swig_destroy__ = _snaptime_helper.delete_FillData
FillData.createAndFillData = new_instancemethod(_snaptime_helper.FillData_createAndFillData, None, FillData)
FillData.TSVToBin = new_instancemethod(_snaptime_helper.FillData_TSVToBin, None, FillData)
FillData_swigregister = _snaptime_helper.FillData_swigregister
FillData_swigregister(FillData)



